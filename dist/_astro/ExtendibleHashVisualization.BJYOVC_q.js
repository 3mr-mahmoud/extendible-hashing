import{j as e}from"./jsx-runtime.D_zvdyIk.js";import{r as c}from"./index.RH_Wq4ov.js";/* empty css                       */const K=()=>{const[u,S]=c.useState(97),[g,E]=c.useState(4),[p,H]=c.useState(3),[f,N]=c.useState(""),[M,j]=c.useState(null),m=c.useCallback(()=>{const s={id:0,localDepth:1,binaryAddress:"0",entries:[],maxCapacity:p},t={id:1,localDepth:1,binaryAddress:"1",entries:[],maxCapacity:p};return{globalDepth:1,maxGlobalDepth:g,bucketCapacity:p,hashModulo:u,buckets:new Map([[0,s],[1,t]]),directory:[{binaryAddress:"0",bucketId:0},{binaryAddress:"1",bucketId:1}],nextBucketId:2}},[p,g,u]),[b,D]=c.useState(m),x=c.useCallback(s=>s%u,[u]),y=c.useCallback((s,t)=>s.toString(2).slice(-t).padStart(t,"0"),[]),v=c.useCallback((s,t)=>{const n=x(s),i=y(n,t.globalDepth);console.log(t),console.log(`Finding bucket for key ${s} with hash ${n} and binary address ${i}`);const l=t.directory.find(o=>o.binaryAddress===i);return l?t.buckets.get(l.bucketId):t.buckets.get(t.directory[0].bucketId)},[x,y]),C=c.useCallback((s,t)=>{const n=t.buckets.get(s);if(n.localDepth>=t.maxGlobalDepth)return t;let i=t.globalDepth,l=[...t.directory];if(n.localDepth===t.globalDepth){i=t.globalDepth+1;const a=[...l];l=[];for(const r of a)l.push({...r,binaryAddress:r.binaryAddress+"0"}),l.push({...r,binaryAddress:r.binaryAddress+"1"})}const o={id:t.nextBucketId,binaryAddress:"1"+n.binaryAddress,localDepth:n.localDepth+1,entries:[],maxCapacity:t.bucketCapacity},k={...n,binaryAddress:"0"+n.binaryAddress,localDepth:n.localDepth+1,entries:[]};for(const a of n.entries){console.log(`Redistributing entry with key ${a.key}, hash ${a.hash}`),console.log(`Bucket local depth: ${n.localDepth}, Updated bucket local depth: ${k.localDepth}`),console.log(`Binary address: ${y(a.hash,k.localDepth)}`);const r=x(a.key);y(r,n.localDepth+1)[0]==="0"?k.entries.push(a):o.entries.push(a)}const d=new Map;for(const[a,r]of t.buckets)a===s?(d.set(a,k),d.set(t.nextBucketId,o)):d.set(a,r);for(let a=0;a<l.length;a++){const r=l[a];for(let h=i;h>=1;h--){const I=r.binaryAddress.slice(-h),w=Array.from(d.values()).find(z=>z.binaryAddress===I);w&&(l[a]={...r,bucketId:w.id})}}return{...t,globalDepth:i,buckets:d,directory:l,nextBucketId:t.nextBucketId+1}},[x,y]),A=c.useCallback(s=>{D(t=>{let n={...t};const i=v(s,n);if(i.entries.findIndex(a=>a.key===s)!==-1)return n;const o=x(s),k=o.toString(2),d={key:s,hash:o,binaryHash:k};if(i.entries.length<i.maxCapacity){const a={...i,entries:[...i.entries,d]},r=new Map(n.buckets);return r.set(i.id,a),{...n,buckets:r}}else{j(i.id),setTimeout(()=>j(null),1e3),n=C(i.id,n);const a=v(s,n),r={...a,entries:[...a.entries,d]},h=new Map(n.buckets);return h.set(a.id,r),{...n,buckets:h}}})},[v,C,x,y]),$=c.useCallback(s=>{s.preventDefault();const t=parseInt(f);isNaN(t)||(A(t),N(""))},[f,A]),G=c.useCallback(()=>{D(m()),j(null)},[m]),B=c.useCallback(()=>{D(m()),j(null)},[m]);return e.jsxs("div",{className:"extendible-hash-container",children:[e.jsx("h1",{children:"Extendible Hashing Visualization"}),e.jsx("div",{className:"config-panel",children:e.jsxs("div",{className:"config-group",children:[e.jsxs("label",{children:["Hash Modulo:",e.jsx("input",{type:"number",min:"2",max:"32",value:u,onChange:s=>S(parseInt(s.target.value)||2),onBlur:B})]}),e.jsxs("label",{children:["Max Global Depth (k):",e.jsx("input",{type:"number",min:"1",max:"8",value:g,onChange:s=>E(parseInt(s.target.value)||1),onBlur:B})]}),e.jsxs("label",{children:["Bucket Capacity (r):",e.jsx("input",{type:"number",min:"1",max:"10",value:p,onChange:s=>H(parseInt(s.target.value)||1),onBlur:B})]}),e.jsx("button",{onClick:G,className:"reset-btn",children:"Reset Hash Table"})]})}),e.jsx("div",{className:"insert-panel",children:e.jsxs("form",{onSubmit:$,children:[e.jsx("input",{type:"number",placeholder:"Enter key to insert",value:f,onChange:s=>N(s.target.value),required:!0}),e.jsx("button",{type:"submit",children:"Insert Key"})]})}),e.jsxs("div",{className:"visualization-container",children:[e.jsxs("div",{className:"directory-section",children:[e.jsxs("h3",{children:["Directory (Global Depth: ",b.globalDepth,")"]}),e.jsx("div",{className:"directory",children:b.directory.map((s,t)=>e.jsxs("div",{className:"directory-entry",children:[e.jsx("span",{className:"binary-addr",children:s.binaryAddress||"∅"}),e.jsx("span",{className:"arrow",children:"→"}),e.jsxs("span",{className:"bucket-ref",children:["Bucket ",s.bucketId]})]},t))})]}),e.jsxs("div",{className:"buckets-section",children:[e.jsx("h3",{children:"Buckets"}),e.jsx("div",{className:"buckets-container",children:Array.from(b.buckets.values()).map(s=>e.jsxs("div",{className:`bucket ${M===s.id?"splitting":""}`,children:[e.jsxs("div",{className:"bucket-header",children:[e.jsxs("span",{className:"bucket-id",children:["Bucket ",s.id]}),e.jsxs("span",{className:"local-depth",title:"Local Depth: Number of bits this bucket uses from the hash value for addressing",children:["Depth: ",s.localDepth]})]}),e.jsxs("div",{className:"bucket-entries",children:[s.entries.map((t,n)=>e.jsxs("div",{className:"entry",children:[e.jsx("span",{className:"key",children:t.key}),e.jsxs("span",{className:"hash-info",children:["(",t.hash," → ",t.binaryHash,")"]})]},n)),Array.from({length:s.maxCapacity-s.entries.length}).map((t,n)=>e.jsx("div",{className:"entry empty",children:e.jsx("span",{children:"—"})},`empty-${n}`))]})]},s.id))})]})]}),e.jsxs("div",{className:"info-panel",children:[e.jsx("h3",{children:"Current Configuration"}),e.jsxs("div",{className:"info-grid",children:[e.jsxs("div",{children:["Hash Function: key % ",u]}),e.jsxs("div",{children:["Global Depth: ",b.globalDepth]}),e.jsxs("div",{children:["Max Global Depth: ",g]}),e.jsxs("div",{children:["Bucket Capacity: ",p]}),e.jsxs("div",{children:["Total Buckets: ",b.buckets.size]}),e.jsxs("div",{children:["Directory Size: ",b.directory.length]})]})]})]})};export{K as default};
